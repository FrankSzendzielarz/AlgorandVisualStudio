### YamlMime:ManagedReference
items:
- uid: AlgoStudio.Core.SmartContract
  commentId: T:AlgoStudio.Core.SmartContract
  id: SmartContract
  parent: AlgoStudio.Core
  children:
  - AlgoStudio.Core.SmartContract.ApprovalProgram(AlgoStudio.Core.AppCallTransactionReference@)
  - AlgoStudio.Core.SmartContract.AssetReferences
  - AlgoStudio.Core.SmartContract.Balance
  - AlgoStudio.Core.SmartContract.BigIntegerFromByteArray(System.Byte[])
  - AlgoStudio.Core.SmartContract.BigIntegerFromIntegral(System.Int64)
  - AlgoStudio.Core.SmartContract.BigIntegerToByteArray(System.Numerics.BigInteger)
  - AlgoStudio.Core.SmartContract.BoxDel(System.Byte[])
  - AlgoStudio.Core.SmartContract.BoxExists(System.Byte[])
  - AlgoStudio.Core.SmartContract.BoxGet(System.Byte[])
  - AlgoStudio.Core.SmartContract.BoxLen(System.Byte[])
  - AlgoStudio.Core.SmartContract.BoxSet(System.Byte[],System.Byte[])
  - AlgoStudio.Core.SmartContract.CallerApplicationAddress
  - AlgoStudio.Core.SmartContract.CallerApplicationID
  - AlgoStudio.Core.SmartContract.ClearStateProgram(AlgoStudio.Core.AppCallTransactionReference@)
  - AlgoStudio.Core.SmartContract.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  - AlgoStudio.Core.SmartContract.CreatorAddress
  - AlgoStudio.Core.SmartContract.CurrentApplicationAddress
  - AlgoStudio.Core.SmartContract.CurrentApplicationID
  - AlgoStudio.Core.SmartContract.DecimalFromTealBytes(System.Byte[])
  - AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  - AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  - AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  - AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  - AlgoStudio.Core.SmartContract.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  - AlgoStudio.Core.SmartContract.EncodeString(System.String)
  - AlgoStudio.Core.SmartContract.Error
  - AlgoStudio.Core.SmartContract.Fail
  - AlgoStudio.Core.SmartContract.GroupId
  - AlgoStudio.Core.SmartContract.GroupSize
  - AlgoStudio.Core.SmartContract.InvokeSmartContractMethod
  - AlgoStudio.Core.SmartContract.Keccak256(System.Byte[])
  - AlgoStudio.Core.SmartContract.LatestTimeStamp
  - AlgoStudio.Core.SmartContract.LogBytes(System.Byte[])
  - AlgoStudio.Core.SmartContract.LogicSigVersion
  - AlgoStudio.Core.SmartContract.LogInt(System.Int64)
  - AlgoStudio.Core.SmartContract.LogUInt(System.UInt64)
  - AlgoStudio.Core.SmartContract.MaxTransactionLife
  - AlgoStudio.Core.SmartContract.MinBalance
  - AlgoStudio.Core.SmartContract.MinTransactionFee
  - AlgoStudio.Core.SmartContract.OpcodeBudget
  - AlgoStudio.Core.SmartContract.Round
  - AlgoStudio.Core.SmartContract.Sha256(System.Byte[])
  - AlgoStudio.Core.SmartContract.Sha512_256(System.Byte[])
  - AlgoStudio.Core.SmartContract.SwitchLocalAccountContext(System.Int32)
  - AlgoStudio.Core.SmartContract.TealBytesFromDecimal(System.Decimal)
  - AlgoStudio.Core.SmartContract.ZeroAddress
  langs:
  - csharp
  - vb
  name: SmartContract
  nameWithType: SmartContract
  fullName: AlgoStudio.Core.SmartContract
  type: Class
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: SmartContract
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 10
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: 'public abstract class SmartContract : ISmartContractPredefineds, IAlgorandCommonPredefineds'
    content.vb: >-
      Public MustInherit Class SmartContract

          Implements ISmartContractPredefineds, IAlgorandCommonPredefineds
  inheritance:
  - System.Object
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds
  - AlgoStudio.Core.IAlgorandCommonPredefineds
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: AlgoStudio.Core.SmartContract.Balance
  commentId: P:AlgoStudio.Core.SmartContract.Balance
  id: Balance
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Balance
  nameWithType: SmartContract.Balance
  fullName: AlgoStudio.Core.SmartContract.Balance
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Balance
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 12
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong Balance { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Balance As ULong
  overload: AlgoStudio.Core.SmartContract.Balance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.MinTransactionFee
  commentId: P:AlgoStudio.Core.SmartContract.MinTransactionFee
  id: MinTransactionFee
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: MinTransactionFee
  nameWithType: SmartContract.MinTransactionFee
  fullName: AlgoStudio.Core.SmartContract.MinTransactionFee
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: MinTransactionFee
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 13
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong MinTransactionFee { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property MinTransactionFee As ULong
  overload: AlgoStudio.Core.SmartContract.MinTransactionFee*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.MinTransactionFee
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.MinBalance
  commentId: P:AlgoStudio.Core.SmartContract.MinBalance
  id: MinBalance
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: MinBalance
  nameWithType: SmartContract.MinBalance
  fullName: AlgoStudio.Core.SmartContract.MinBalance
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: MinBalance
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 15
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong MinBalance { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property MinBalance As ULong
  overload: AlgoStudio.Core.SmartContract.MinBalance*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.MinBalance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.MaxTransactionLife
  commentId: P:AlgoStudio.Core.SmartContract.MaxTransactionLife
  id: MaxTransactionLife
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: MaxTransactionLife
  nameWithType: SmartContract.MaxTransactionLife
  fullName: AlgoStudio.Core.SmartContract.MaxTransactionLife
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: MaxTransactionLife
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 17
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong MaxTransactionLife { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property MaxTransactionLife As ULong
  overload: AlgoStudio.Core.SmartContract.MaxTransactionLife*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.MaxTransactionLife
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.ZeroAddress
  commentId: P:AlgoStudio.Core.SmartContract.ZeroAddress
  id: ZeroAddress
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: ZeroAddress
  nameWithType: SmartContract.ZeroAddress
  fullName: AlgoStudio.Core.SmartContract.ZeroAddress
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ZeroAddress
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 19
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] ZeroAddress { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property ZeroAddress As Byte()
  overload: AlgoStudio.Core.SmartContract.ZeroAddress*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.ZeroAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.GroupSize
  commentId: P:AlgoStudio.Core.SmartContract.GroupSize
  id: GroupSize
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: GroupSize
  nameWithType: SmartContract.GroupSize
  fullName: AlgoStudio.Core.SmartContract.GroupSize
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: GroupSize
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 21
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong GroupSize { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property GroupSize As ULong
  overload: AlgoStudio.Core.SmartContract.GroupSize*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.GroupSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.LogicSigVersion
  commentId: P:AlgoStudio.Core.SmartContract.LogicSigVersion
  id: LogicSigVersion
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: LogicSigVersion
  nameWithType: SmartContract.LogicSigVersion
  fullName: AlgoStudio.Core.SmartContract.LogicSigVersion
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: LogicSigVersion
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 23
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong LogicSigVersion { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property LogicSigVersion As ULong
  overload: AlgoStudio.Core.SmartContract.LogicSigVersion*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.LogicSigVersion
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.Round
  commentId: P:AlgoStudio.Core.SmartContract.Round
  id: Round
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: SmartContract.Round
  fullName: AlgoStudio.Core.SmartContract.Round
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Round
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 25
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong Round { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Round As ULong
  overload: AlgoStudio.Core.SmartContract.Round*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.Round
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.LatestTimeStamp
  commentId: P:AlgoStudio.Core.SmartContract.LatestTimeStamp
  id: LatestTimeStamp
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: LatestTimeStamp
  nameWithType: SmartContract.LatestTimeStamp
  fullName: AlgoStudio.Core.SmartContract.LatestTimeStamp
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: LatestTimeStamp
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 27
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong LatestTimeStamp { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property LatestTimeStamp As ULong
  overload: AlgoStudio.Core.SmartContract.LatestTimeStamp*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.LatestTimeStamp
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.CurrentApplicationID
  commentId: P:AlgoStudio.Core.SmartContract.CurrentApplicationID
  id: CurrentApplicationID
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CurrentApplicationID
  nameWithType: SmartContract.CurrentApplicationID
  fullName: AlgoStudio.Core.SmartContract.CurrentApplicationID
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CurrentApplicationID
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 29
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong CurrentApplicationID { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property CurrentApplicationID As ULong
  overload: AlgoStudio.Core.SmartContract.CurrentApplicationID*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationID
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.CreatorAddress
  commentId: P:AlgoStudio.Core.SmartContract.CreatorAddress
  id: CreatorAddress
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CreatorAddress
  nameWithType: SmartContract.CreatorAddress
  fullName: AlgoStudio.Core.SmartContract.CreatorAddress
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CreatorAddress
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 31
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] CreatorAddress { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property CreatorAddress As Byte()
  overload: AlgoStudio.Core.SmartContract.CreatorAddress*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.CreatorAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.CurrentApplicationAddress
  commentId: P:AlgoStudio.Core.SmartContract.CurrentApplicationAddress
  id: CurrentApplicationAddress
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CurrentApplicationAddress
  nameWithType: SmartContract.CurrentApplicationAddress
  fullName: AlgoStudio.Core.SmartContract.CurrentApplicationAddress
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CurrentApplicationAddress
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 33
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] CurrentApplicationAddress { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property CurrentApplicationAddress As Byte()
  overload: AlgoStudio.Core.SmartContract.CurrentApplicationAddress*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationAddress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.GroupId
  commentId: P:AlgoStudio.Core.SmartContract.GroupId
  id: GroupId
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: SmartContract.GroupId
  fullName: AlgoStudio.Core.SmartContract.GroupId
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: GroupId
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 35
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] GroupId { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property GroupId As Byte()
  overload: AlgoStudio.Core.SmartContract.GroupId*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.GroupId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.OpcodeBudget
  commentId: P:AlgoStudio.Core.SmartContract.OpcodeBudget
  id: OpcodeBudget
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: OpcodeBudget
  nameWithType: SmartContract.OpcodeBudget
  fullName: AlgoStudio.Core.SmartContract.OpcodeBudget
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: OpcodeBudget
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 37
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong OpcodeBudget { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property OpcodeBudget As ULong
  overload: AlgoStudio.Core.SmartContract.OpcodeBudget*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.CallerApplicationID
  commentId: P:AlgoStudio.Core.SmartContract.CallerApplicationID
  id: CallerApplicationID
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CallerApplicationID
  nameWithType: SmartContract.CallerApplicationID
  fullName: AlgoStudio.Core.SmartContract.CallerApplicationID
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CallerApplicationID
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 38
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] CallerApplicationID { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property CallerApplicationID As Byte()
  overload: AlgoStudio.Core.SmartContract.CallerApplicationID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.CallerApplicationAddress
  commentId: P:AlgoStudio.Core.SmartContract.CallerApplicationAddress
  id: CallerApplicationAddress
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CallerApplicationAddress
  nameWithType: SmartContract.CallerApplicationAddress
  fullName: AlgoStudio.Core.SmartContract.CallerApplicationAddress
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CallerApplicationAddress
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 39
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] CallerApplicationAddress { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property CallerApplicationAddress As Byte()
  overload: AlgoStudio.Core.SmartContract.CallerApplicationAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.AssetReferences
  commentId: P:AlgoStudio.Core.SmartContract.AssetReferences
  id: AssetReferences
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: AssetReferences
  nameWithType: SmartContract.AssetReferences
  fullName: AlgoStudio.Core.SmartContract.AssetReferences
  type: Property
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: AssetReferences
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 40
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public AssetReference[] AssetReferences { get; }
    parameters: []
    return:
      type: AlgoStudio.Core.AssetReference[]
    content.vb: Public ReadOnly Property AssetReferences As AssetReference()
  overload: AlgoStudio.Core.SmartContract.AssetReferences*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.AssetReferences
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  commentId: M:AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  id: Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Ecdsa_pk_decompress_secp256k1(Byte[], out Byte[], out Byte[])
  nameWithType: SmartContract.Ecdsa_pk_decompress_secp256k1(Byte[], out Byte[], out Byte[])
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1(System.Byte[], out System.Byte[], out System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Ecdsa_pk_decompress_secp256k1
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 41
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void Ecdsa_pk_decompress_secp256k1(byte[] pk, out byte[] pubkey_X, out byte[] pubkey_Y)
    parameters:
    - id: pk
      type: System.Byte[]
    - id: pubkey_X
      type: System.Byte[]
    - id: pubkey_Y
      type: System.Byte[]
    content.vb: Public Sub Ecdsa_pk_decompress_secp256k1(pk As Byte(), ByRef pubkey_X As Byte(), ByRef pubkey_Y As Byte())
  overload: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  nameWithType.vb: SmartContract.Ecdsa_pk_decompress_secp256k1(Byte(), ByRef Byte(), ByRef Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1(System.Byte(), ByRef System.Byte(), ByRef System.Byte())
  name.vb: Ecdsa_pk_decompress_secp256k1(Byte(), ByRef Byte(), ByRef Byte())
- uid: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  commentId: M:AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  id: Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Ecdsa_pk_recover_secp256k1(Byte[], UInt64, Byte[], Byte[], out Byte[], out Byte[])
  nameWithType: SmartContract.Ecdsa_pk_recover_secp256k1(Byte[], UInt64, Byte[], Byte[], out Byte[], out Byte[])
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1(System.Byte[], System.UInt64, System.Byte[], System.Byte[], out System.Byte[], out System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Ecdsa_pk_recover_secp256k1
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 42
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void Ecdsa_pk_recover_secp256k1(byte[] data, ulong recover_id, byte[] signature_R, byte[] signature_S, out byte[] pubkey_X, out byte[] pubkey_Y)
    parameters:
    - id: data
      type: System.Byte[]
    - id: recover_id
      type: System.UInt64
    - id: signature_R
      type: System.Byte[]
    - id: signature_S
      type: System.Byte[]
    - id: pubkey_X
      type: System.Byte[]
    - id: pubkey_Y
      type: System.Byte[]
    content.vb: Public Sub Ecdsa_pk_recover_secp256k1(data As Byte(), recover_id As ULong, signature_R As Byte(), signature_S As Byte(), ByRef pubkey_X As Byte(), ByRef pubkey_Y As Byte())
  overload: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  nameWithType.vb: SmartContract.Ecdsa_pk_recover_secp256k1(Byte(), UInt64, Byte(), Byte(), ByRef Byte(), ByRef Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1(System.Byte(), System.UInt64, System.Byte(), System.Byte(), ByRef System.Byte(), ByRef System.Byte())
  name.vb: Ecdsa_pk_recover_secp256k1(Byte(), UInt64, Byte(), Byte(), ByRef Byte(), ByRef Byte())
- uid: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  id: Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Ecdsa_verify_secp256k1(Byte[], Byte[], Byte[], Byte[], Byte[])
  nameWithType: SmartContract.Ecdsa_verify_secp256k1(Byte[], Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Ecdsa_verify_secp256k1
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 43
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public bool Ecdsa_verify_secp256k1(byte[] data, byte[] signature_R, byte[] signature_S, byte[] pubkey_X, byte[] pubkey_Y)
    parameters:
    - id: data
      type: System.Byte[]
    - id: signature_R
      type: System.Byte[]
    - id: signature_S
      type: System.Byte[]
    - id: pubkey_X
      type: System.Byte[]
    - id: pubkey_Y
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Function Ecdsa_verify_secp256k1(data As Byte(), signature_R As Byte(), signature_S As Byte(), pubkey_X As Byte(), pubkey_Y As Byte()) As Boolean
  overload: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  nameWithType.vb: SmartContract.Ecdsa_verify_secp256k1(Byte(), Byte(), Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: Ecdsa_verify_secp256k1(Byte(), Byte(), Byte(), Byte(), Byte())
- uid: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  id: Ecdsa_verify_secp256r1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Ecdsa_verify_secp256r1(Byte[], Byte[], Byte[], Byte[], Byte[])
  nameWithType: SmartContract.Ecdsa_verify_secp256r1(Byte[], Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Ecdsa_verify_secp256r1
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 44
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public bool Ecdsa_verify_secp256r1(byte[] data, byte[] signature_R, byte[] signature_S, byte[] pubkey_X, byte[] pubkey_Y)
    parameters:
    - id: data
      type: System.Byte[]
    - id: signature_R
      type: System.Byte[]
    - id: signature_S
      type: System.Byte[]
    - id: pubkey_X
      type: System.Byte[]
    - id: pubkey_Y
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Function Ecdsa_verify_secp256r1(data As Byte(), signature_R As Byte(), signature_S As Byte(), pubkey_X As Byte(), pubkey_Y As Byte()) As Boolean
  overload: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1*
  nameWithType.vb: SmartContract.Ecdsa_verify_secp256r1(Byte(), Byte(), Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: Ecdsa_verify_secp256r1(Byte(), Byte(), Byte(), Byte(), Byte())
- uid: AlgoStudio.Core.SmartContract.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  id: Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Ed25519verify(Byte[], Byte[], Byte[])
  nameWithType: SmartContract.Ed25519verify(Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.SmartContract.Ed25519verify(System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Ed25519verify
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 45
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public bool Ed25519verify(byte[] data, byte[] signature, byte[] publicKey)
    parameters:
    - id: data
      type: System.Byte[]
    - id: signature
      type: System.Byte[]
    - id: publicKey
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Function Ed25519verify(data As Byte(), signature As Byte(), publicKey As Byte()) As Boolean
  overload: AlgoStudio.Core.SmartContract.Ed25519verify*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  nameWithType.vb: SmartContract.Ed25519verify(Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Ed25519verify(System.Byte(), System.Byte(), System.Byte())
  name.vb: Ed25519verify(Byte(), Byte(), Byte())
- uid: AlgoStudio.Core.SmartContract.EncodeString(System.String)
  commentId: M:AlgoStudio.Core.SmartContract.EncodeString(System.String)
  id: EncodeString(System.String)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: EncodeString(String)
  nameWithType: SmartContract.EncodeString(String)
  fullName: AlgoStudio.Core.SmartContract.EncodeString(System.String)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: EncodeString
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 46
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] EncodeString(string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Function EncodeString(str As String) As Byte()
  overload: AlgoStudio.Core.SmartContract.EncodeString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.Keccak256(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Keccak256(System.Byte[])
  id: Keccak256(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Keccak256(Byte[])
  nameWithType: SmartContract.Keccak256(Byte[])
  fullName: AlgoStudio.Core.SmartContract.Keccak256(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Keccak256
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 47
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] Keccak256(byte[] toHash)
    parameters:
    - id: toHash
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Function Keccak256(toHash As Byte()) As Byte()
  overload: AlgoStudio.Core.SmartContract.Keccak256*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
  nameWithType.vb: SmartContract.Keccak256(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Keccak256(System.Byte())
  name.vb: Keccak256(Byte())
- uid: AlgoStudio.Core.SmartContract.Sha256(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Sha256(System.Byte[])
  id: Sha256(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Sha256(Byte[])
  nameWithType: SmartContract.Sha256(Byte[])
  fullName: AlgoStudio.Core.SmartContract.Sha256(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Sha256
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 48
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] Sha256(byte[] toHash)
    parameters:
    - id: toHash
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Function Sha256(toHash As Byte()) As Byte()
  overload: AlgoStudio.Core.SmartContract.Sha256*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
  nameWithType.vb: SmartContract.Sha256(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Sha256(System.Byte())
  name.vb: Sha256(Byte())
- uid: AlgoStudio.Core.SmartContract.Sha512_256(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.Sha512_256(System.Byte[])
  id: Sha512_256(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Sha512_256(Byte[])
  nameWithType: SmartContract.Sha512_256(Byte[])
  fullName: AlgoStudio.Core.SmartContract.Sha512_256(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Sha512_256
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 49
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] Sha512_256(byte[] toHash)
    parameters:
    - id: toHash
      type: System.Byte[]
    return:
      type: System.Byte[]
    content.vb: Public Function Sha512_256(toHash As Byte()) As Byte()
  overload: AlgoStudio.Core.SmartContract.Sha512_256*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
  nameWithType.vb: SmartContract.Sha512_256(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.Sha512_256(System.Byte())
  name.vb: Sha512_256(Byte())
- uid: AlgoStudio.Core.SmartContract.SwitchLocalAccountContext(System.Int32)
  commentId: M:AlgoStudio.Core.SmartContract.SwitchLocalAccountContext(System.Int32)
  id: SwitchLocalAccountContext(System.Int32)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: SwitchLocalAccountContext(Int32)
  nameWithType: SmartContract.SwitchLocalAccountContext(Int32)
  fullName: AlgoStudio.Core.SmartContract.SwitchLocalAccountContext(System.Int32)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: SwitchLocalAccountContext
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 50
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void SwitchLocalAccountContext(int acccountIndex)
    parameters:
    - id: acccountIndex
      type: System.Int32
    content.vb: Public Sub SwitchLocalAccountContext(acccountIndex As Integer)
  overload: AlgoStudio.Core.SmartContract.SwitchLocalAccountContext*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BigIntegerFromByteArray(System.Byte[])
  id: BigIntegerFromByteArray(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BigIntegerFromByteArray(Byte[])
  nameWithType: SmartContract.BigIntegerFromByteArray(Byte[])
  fullName: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BigIntegerFromByteArray
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 51
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public BigInteger BigIntegerFromByteArray(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Function BigIntegerFromByteArray(bytes As Byte()) As BigInteger
  overload: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
  nameWithType.vb: SmartContract.BigIntegerFromByteArray(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray(System.Byte())
  name.vb: BigIntegerFromByteArray(Byte())
- uid: AlgoStudio.Core.SmartContract.BigIntegerToByteArray(System.Numerics.BigInteger)
  commentId: M:AlgoStudio.Core.SmartContract.BigIntegerToByteArray(System.Numerics.BigInteger)
  id: BigIntegerToByteArray(System.Numerics.BigInteger)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BigIntegerToByteArray(BigInteger)
  nameWithType: SmartContract.BigIntegerToByteArray(BigInteger)
  fullName: AlgoStudio.Core.SmartContract.BigIntegerToByteArray(System.Numerics.BigInteger)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BigIntegerToByteArray
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 52
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] BigIntegerToByteArray(BigInteger b)
    parameters:
    - id: b
      type: System.Numerics.BigInteger
    return:
      type: System.Byte[]
    content.vb: Public Function BigIntegerToByteArray(b As BigInteger) As Byte()
  overload: AlgoStudio.Core.SmartContract.BigIntegerToByteArray*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.BigIntegerFromIntegral(System.Int64)
  commentId: M:AlgoStudio.Core.SmartContract.BigIntegerFromIntegral(System.Int64)
  id: BigIntegerFromIntegral(System.Int64)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BigIntegerFromIntegral(Int64)
  nameWithType: SmartContract.BigIntegerFromIntegral(Int64)
  fullName: AlgoStudio.Core.SmartContract.BigIntegerFromIntegral(System.Int64)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BigIntegerFromIntegral
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 53
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public BigInteger BigIntegerFromIntegral(long integral)
    parameters:
    - id: integral
      type: System.Int64
    return:
      type: System.Numerics.BigInteger
    content.vb: Public Function BigIntegerFromIntegral(integral As Long) As BigInteger
  overload: AlgoStudio.Core.SmartContract.BigIntegerFromIntegral*
  implements:
  - AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.TealBytesFromDecimal(System.Decimal)
  commentId: M:AlgoStudio.Core.SmartContract.TealBytesFromDecimal(System.Decimal)
  id: TealBytesFromDecimal(System.Decimal)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: TealBytesFromDecimal(Decimal)
  nameWithType: SmartContract.TealBytesFromDecimal(Decimal)
  fullName: AlgoStudio.Core.SmartContract.TealBytesFromDecimal(System.Decimal)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: TealBytesFromDecimal
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 54
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public byte[] TealBytesFromDecimal(decimal dec)
    parameters:
    - id: dec
      type: System.Decimal
    return:
      type: System.Byte[]
    content.vb: Public Function TealBytesFromDecimal(dec As Decimal) As Byte()
  overload: AlgoStudio.Core.SmartContract.TealBytesFromDecimal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.DecimalFromTealBytes(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.DecimalFromTealBytes(System.Byte[])
  id: DecimalFromTealBytes(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: DecimalFromTealBytes(Byte[])
  nameWithType: SmartContract.DecimalFromTealBytes(Byte[])
  fullName: AlgoStudio.Core.SmartContract.DecimalFromTealBytes(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: DecimalFromTealBytes
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 55
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public decimal DecimalFromTealBytes(byte[] dec)
    parameters:
    - id: dec
      type: System.Byte[]
    return:
      type: System.Decimal
    content.vb: Public Function DecimalFromTealBytes(dec As Byte()) As Decimal
  overload: AlgoStudio.Core.SmartContract.DecimalFromTealBytes*
  nameWithType.vb: SmartContract.DecimalFromTealBytes(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.DecimalFromTealBytes(System.Byte())
  name.vb: DecimalFromTealBytes(Byte())
- uid: AlgoStudio.Core.SmartContract.Fail
  commentId: M:AlgoStudio.Core.SmartContract.Fail
  id: Fail
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Fail()
  nameWithType: SmartContract.Fail()
  fullName: AlgoStudio.Core.SmartContract.Fail()
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Fail
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 56
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void Fail()
    content.vb: Public Sub Fail
  overload: AlgoStudio.Core.SmartContract.Fail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  id: CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: CreateAsset(UInt64, UInt32, Boolean, Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[])
  nameWithType: SmartContract.CreateAsset(UInt64, UInt32, Boolean, Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.SmartContract.CreateAsset(System.UInt64, System.UInt32, System.Boolean, System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: CreateAsset
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 57
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public ulong CreateAsset(ulong total, uint decimals, bool defaultFrozen, byte[] unitName = null, byte[] assetName = null, byte[] url = null, byte[] metaDataHash = null, byte[] manager = null, byte[] reserve = null, byte[] freeze = null, byte[] clawback = null)
    parameters:
    - id: total
      type: System.UInt64
    - id: decimals
      type: System.UInt32
    - id: defaultFrozen
      type: System.Boolean
    - id: unitName
      type: System.Byte[]
    - id: assetName
      type: System.Byte[]
    - id: url
      type: System.Byte[]
    - id: metaDataHash
      type: System.Byte[]
    - id: manager
      type: System.Byte[]
    - id: reserve
      type: System.Byte[]
    - id: freeze
      type: System.Byte[]
    - id: clawback
      type: System.Byte[]
    return:
      type: System.UInt64
    content.vb: Public Function CreateAsset(total As ULong, decimals As UInteger, defaultFrozen As Boolean, unitName As Byte() = Nothing, assetName As Byte() = Nothing, url As Byte() = Nothing, metaDataHash As Byte() = Nothing, manager As Byte() = Nothing, reserve As Byte() = Nothing, freeze As Byte() = Nothing, clawback As Byte() = Nothing) As ULong
  overload: AlgoStudio.Core.SmartContract.CreateAsset*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  nameWithType.vb: SmartContract.CreateAsset(UInt64, UInt32, Boolean, Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.CreateAsset(System.UInt64, System.UInt32, System.Boolean, System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateAsset(UInt64, UInt32, Boolean, Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte())
- uid: AlgoStudio.Core.SmartContract.InvokeSmartContractMethod
  commentId: M:AlgoStudio.Core.SmartContract.InvokeSmartContractMethod
  id: InvokeSmartContractMethod
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: InvokeSmartContractMethod()
  nameWithType: SmartContract.InvokeSmartContractMethod()
  fullName: AlgoStudio.Core.SmartContract.InvokeSmartContractMethod()
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: InvokeSmartContractMethod
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 58
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void InvokeSmartContractMethod()
    content.vb: Public Sub InvokeSmartContractMethod
  overload: AlgoStudio.Core.SmartContract.InvokeSmartContractMethod*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.LogBytes(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.LogBytes(System.Byte[])
  id: LogBytes(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: LogBytes(Byte[])
  nameWithType: SmartContract.LogBytes(Byte[])
  fullName: AlgoStudio.Core.SmartContract.LogBytes(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: LogBytes
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 59
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void LogBytes(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    content.vb: Public Sub LogBytes(bytes As Byte())
  overload: AlgoStudio.Core.SmartContract.LogBytes*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
  nameWithType.vb: SmartContract.LogBytes(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.LogBytes(System.Byte())
  name.vb: LogBytes(Byte())
- uid: AlgoStudio.Core.SmartContract.LogInt(System.Int64)
  commentId: M:AlgoStudio.Core.SmartContract.LogInt(System.Int64)
  id: LogInt(System.Int64)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: LogInt(Int64)
  nameWithType: SmartContract.LogInt(Int64)
  fullName: AlgoStudio.Core.SmartContract.LogInt(System.Int64)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: LogInt
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 60
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void LogInt(long integral)
    parameters:
    - id: integral
      type: System.Int64
    content.vb: Public Sub LogInt(integral As Long)
  overload: AlgoStudio.Core.SmartContract.LogInt*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.LogUInt(System.UInt64)
  commentId: M:AlgoStudio.Core.SmartContract.LogUInt(System.UInt64)
  id: LogUInt(System.UInt64)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: LogUInt(UInt64)
  nameWithType: SmartContract.LogUInt(UInt64)
  fullName: AlgoStudio.Core.SmartContract.LogUInt(System.UInt64)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: LogUInt
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 61
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void LogUInt(ulong integral)
    parameters:
    - id: integral
      type: System.UInt64
    content.vb: Public Sub LogUInt(integral As ULong)
  overload: AlgoStudio.Core.SmartContract.LogUInt*
  implements:
  - AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.BoxSet(System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BoxSet(System.Byte[],System.Byte[])
  id: BoxSet(System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BoxSet(Byte[], Byte[])
  nameWithType: SmartContract.BoxSet(Byte[], Byte[])
  fullName: AlgoStudio.Core.SmartContract.BoxSet(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BoxSet
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 66
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  summary: "\nCreate or update a box\n"
  example: []
  syntax:
    content: public void BoxSet(byte[] boxName, byte[] data)
    parameters:
    - id: boxName
      type: System.Byte[]
      description: Name of box
    - id: data
      type: System.Byte[]
    content.vb: Public Sub BoxSet(boxName As Byte(), data As Byte())
  overload: AlgoStudio.Core.SmartContract.BoxSet*
  nameWithType.vb: SmartContract.BoxSet(Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BoxSet(System.Byte(), System.Byte())
  name.vb: BoxSet(Byte(), Byte())
- uid: AlgoStudio.Core.SmartContract.BoxDel(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BoxDel(System.Byte[])
  id: BoxDel(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BoxDel(Byte[])
  nameWithType: SmartContract.BoxDel(Byte[])
  fullName: AlgoStudio.Core.SmartContract.BoxDel(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BoxDel
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 72
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  summary: "\nDelete box by name. \n"
  example: []
  syntax:
    content: public void BoxDel(byte[] boxName)
    parameters:
    - id: boxName
      type: System.Byte[]
      description: Name of box
    content.vb: Public Sub BoxDel(boxName As Byte())
  overload: AlgoStudio.Core.SmartContract.BoxDel*
  nameWithType.vb: SmartContract.BoxDel(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BoxDel(System.Byte())
  name.vb: BoxDel(Byte())
- uid: AlgoStudio.Core.SmartContract.BoxLen(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BoxLen(System.Byte[])
  id: BoxLen(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BoxLen(Byte[])
  nameWithType: SmartContract.BoxLen(Byte[])
  fullName: AlgoStudio.Core.SmartContract.BoxLen(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BoxLen
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 79
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  summary: "\nLength of box by name, or -1 if the box did not exist.\n"
  example: []
  syntax:
    content: public long BoxLen(byte[] boxName)
    parameters:
    - id: boxName
      type: System.Byte[]
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function BoxLen(boxName As Byte()) As Long
  overload: AlgoStudio.Core.SmartContract.BoxLen*
  exceptions:
  - type: AlgoStudio.Core.IntentionallyNotImplementedException
    commentId: T:AlgoStudio.Core.IntentionallyNotImplementedException
  nameWithType.vb: SmartContract.BoxLen(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BoxLen(System.Byte())
  name.vb: BoxLen(Byte())
- uid: AlgoStudio.Core.SmartContract.BoxGet(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BoxGet(System.Byte[])
  id: BoxGet(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BoxGet(Byte[])
  nameWithType: SmartContract.BoxGet(Byte[])
  fullName: AlgoStudio.Core.SmartContract.BoxGet(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BoxGet
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 85
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  summary: "\nGet the box contents by name. Error if box does not exist.\n"
  example: []
  syntax:
    content: public byte[] BoxGet(byte[] boxName)
    parameters:
    - id: boxName
      type: System.Byte[]
      description: ''
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Function BoxGet(boxName As Byte()) As Byte()
  overload: AlgoStudio.Core.SmartContract.BoxGet*
  nameWithType.vb: SmartContract.BoxGet(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BoxGet(System.Byte())
  name.vb: BoxGet(Byte())
- uid: AlgoStudio.Core.SmartContract.BoxExists(System.Byte[])
  commentId: M:AlgoStudio.Core.SmartContract.BoxExists(System.Byte[])
  id: BoxExists(System.Byte[])
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: BoxExists(Byte[])
  nameWithType: SmartContract.BoxExists(Byte[])
  fullName: AlgoStudio.Core.SmartContract.BoxExists(System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: BoxExists
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 91
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  summary: "\nCheck if box exists\n"
  example: []
  syntax:
    content: public bool BoxExists(byte[] boxName)
    parameters:
    - id: boxName
      type: System.Byte[]
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function BoxExists(boxName As Byte()) As Boolean
  overload: AlgoStudio.Core.SmartContract.BoxExists*
  nameWithType.vb: SmartContract.BoxExists(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.SmartContract.BoxExists(System.Byte())
  name.vb: BoxExists(Byte())
- uid: AlgoStudio.Core.SmartContract.Error
  commentId: M:AlgoStudio.Core.SmartContract.Error
  id: Error
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: Error()
  nameWithType: SmartContract.Error()
  fullName: AlgoStudio.Core.SmartContract.Error()
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Error
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 92
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public bool Error()
    return:
      type: System.Boolean
    content.vb: Public Function Error As Boolean
  overload: AlgoStudio.Core.SmartContract.Error*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.SmartContract.ApprovalProgram(AlgoStudio.Core.AppCallTransactionReference@)
  commentId: M:AlgoStudio.Core.SmartContract.ApprovalProgram(AlgoStudio.Core.AppCallTransactionReference@)
  id: ApprovalProgram(AlgoStudio.Core.AppCallTransactionReference@)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: ApprovalProgram(in AppCallTransactionReference)
  nameWithType: SmartContract.ApprovalProgram(in AppCallTransactionReference)
  fullName: AlgoStudio.Core.SmartContract.ApprovalProgram(in AlgoStudio.Core.AppCallTransactionReference)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ApprovalProgram
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 93
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: protected abstract int ApprovalProgram(in AppCallTransactionReference transaction)
    parameters:
    - id: transaction
      type: AlgoStudio.Core.AppCallTransactionReference
    return:
      type: System.Int32
    content.vb: Protected MustOverride Function ApprovalProgram(ByRef transaction As AppCallTransactionReference) As Integer
  overload: AlgoStudio.Core.SmartContract.ApprovalProgram*
  nameWithType.vb: SmartContract.ApprovalProgram(ByRef AppCallTransactionReference)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: AlgoStudio.Core.SmartContract.ApprovalProgram(ByRef AlgoStudio.Core.AppCallTransactionReference)
  name.vb: ApprovalProgram(ByRef AppCallTransactionReference)
- uid: AlgoStudio.Core.SmartContract.ClearStateProgram(AlgoStudio.Core.AppCallTransactionReference@)
  commentId: M:AlgoStudio.Core.SmartContract.ClearStateProgram(AlgoStudio.Core.AppCallTransactionReference@)
  id: ClearStateProgram(AlgoStudio.Core.AppCallTransactionReference@)
  parent: AlgoStudio.Core.SmartContract
  langs:
  - csharp
  - vb
  name: ClearStateProgram(in AppCallTransactionReference)
  nameWithType: SmartContract.ClearStateProgram(in AppCallTransactionReference)
  fullName: AlgoStudio.Core.SmartContract.ClearStateProgram(in AlgoStudio.Core.AppCallTransactionReference)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/SmartContract.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: ClearStateProgram
    path: ../../AlgoStudio/AlgoStudio.Core/SmartContract.cs
    startLine: 94
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: protected abstract int ClearStateProgram(in AppCallTransactionReference transaction)
    parameters:
    - id: transaction
      type: AlgoStudio.Core.AppCallTransactionReference
    return:
      type: System.Int32
    content.vb: Protected MustOverride Function ClearStateProgram(ByRef transaction As AppCallTransactionReference) As Integer
  overload: AlgoStudio.Core.SmartContract.ClearStateProgram*
  nameWithType.vb: SmartContract.ClearStateProgram(ByRef AppCallTransactionReference)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: AlgoStudio.Core.SmartContract.ClearStateProgram(ByRef AlgoStudio.Core.AppCallTransactionReference)
  name.vb: ClearStateProgram(ByRef AppCallTransactionReference)
references:
- uid: AlgoStudio.Core
  commentId: N:AlgoStudio.Core
  name: AlgoStudio.Core
  nameWithType: AlgoStudio.Core
  fullName: AlgoStudio.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AlgoStudio.Core.ISmartContractPredefineds
  commentId: T:AlgoStudio.Core.ISmartContractPredefineds
  parent: AlgoStudio.Core
  name: ISmartContractPredefineds
  nameWithType: ISmartContractPredefineds
  fullName: AlgoStudio.Core.ISmartContractPredefineds
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds
  commentId: T:AlgoStudio.Core.IAlgorandCommonPredefineds
  parent: AlgoStudio.Core
  name: IAlgorandCommonPredefineds
  nameWithType: IAlgorandCommonPredefineds
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AlgoStudio.Core.SmartContract.Balance*
  commentId: Overload:AlgoStudio.Core.SmartContract.Balance
  name: Balance
  nameWithType: SmartContract.Balance
  fullName: AlgoStudio.Core.SmartContract.Balance
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: AlgoStudio.Core.SmartContract.MinTransactionFee*
  commentId: Overload:AlgoStudio.Core.SmartContract.MinTransactionFee
  name: MinTransactionFee
  nameWithType: SmartContract.MinTransactionFee
  fullName: AlgoStudio.Core.SmartContract.MinTransactionFee
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.MinTransactionFee
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.MinTransactionFee
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: MinTransactionFee
  nameWithType: IAlgorandCommonPredefineds.MinTransactionFee
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.MinTransactionFee
- uid: AlgoStudio.Core.SmartContract.MinBalance*
  commentId: Overload:AlgoStudio.Core.SmartContract.MinBalance
  name: MinBalance
  nameWithType: SmartContract.MinBalance
  fullName: AlgoStudio.Core.SmartContract.MinBalance
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.MinBalance
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.MinBalance
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: MinBalance
  nameWithType: IAlgorandCommonPredefineds.MinBalance
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.MinBalance
- uid: AlgoStudio.Core.SmartContract.MaxTransactionLife*
  commentId: Overload:AlgoStudio.Core.SmartContract.MaxTransactionLife
  name: MaxTransactionLife
  nameWithType: SmartContract.MaxTransactionLife
  fullName: AlgoStudio.Core.SmartContract.MaxTransactionLife
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.MaxTransactionLife
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.MaxTransactionLife
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: MaxTransactionLife
  nameWithType: IAlgorandCommonPredefineds.MaxTransactionLife
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.MaxTransactionLife
- uid: AlgoStudio.Core.SmartContract.ZeroAddress*
  commentId: Overload:AlgoStudio.Core.SmartContract.ZeroAddress
  name: ZeroAddress
  nameWithType: SmartContract.ZeroAddress
  fullName: AlgoStudio.Core.SmartContract.ZeroAddress
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.ZeroAddress
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.ZeroAddress
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: ZeroAddress
  nameWithType: IAlgorandCommonPredefineds.ZeroAddress
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.ZeroAddress
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoStudio.Core.SmartContract.GroupSize*
  commentId: Overload:AlgoStudio.Core.SmartContract.GroupSize
  name: GroupSize
  nameWithType: SmartContract.GroupSize
  fullName: AlgoStudio.Core.SmartContract.GroupSize
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.GroupSize
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.GroupSize
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: GroupSize
  nameWithType: IAlgorandCommonPredefineds.GroupSize
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.GroupSize
- uid: AlgoStudio.Core.SmartContract.LogicSigVersion*
  commentId: Overload:AlgoStudio.Core.SmartContract.LogicSigVersion
  name: LogicSigVersion
  nameWithType: SmartContract.LogicSigVersion
  fullName: AlgoStudio.Core.SmartContract.LogicSigVersion
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.LogicSigVersion
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.LogicSigVersion
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: LogicSigVersion
  nameWithType: IAlgorandCommonPredefineds.LogicSigVersion
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.LogicSigVersion
- uid: AlgoStudio.Core.SmartContract.Round*
  commentId: Overload:AlgoStudio.Core.SmartContract.Round
  name: Round
  nameWithType: SmartContract.Round
  fullName: AlgoStudio.Core.SmartContract.Round
- uid: AlgoStudio.Core.ISmartContractPredefineds.Round
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.Round
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: Round
  nameWithType: ISmartContractPredefineds.Round
  fullName: AlgoStudio.Core.ISmartContractPredefineds.Round
- uid: AlgoStudio.Core.SmartContract.LatestTimeStamp*
  commentId: Overload:AlgoStudio.Core.SmartContract.LatestTimeStamp
  name: LatestTimeStamp
  nameWithType: SmartContract.LatestTimeStamp
  fullName: AlgoStudio.Core.SmartContract.LatestTimeStamp
- uid: AlgoStudio.Core.ISmartContractPredefineds.LatestTimeStamp
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.LatestTimeStamp
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: LatestTimeStamp
  nameWithType: ISmartContractPredefineds.LatestTimeStamp
  fullName: AlgoStudio.Core.ISmartContractPredefineds.LatestTimeStamp
- uid: AlgoStudio.Core.SmartContract.CurrentApplicationID*
  commentId: Overload:AlgoStudio.Core.SmartContract.CurrentApplicationID
  name: CurrentApplicationID
  nameWithType: SmartContract.CurrentApplicationID
  fullName: AlgoStudio.Core.SmartContract.CurrentApplicationID
- uid: AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationID
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationID
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: CurrentApplicationID
  nameWithType: ISmartContractPredefineds.CurrentApplicationID
  fullName: AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationID
- uid: AlgoStudio.Core.SmartContract.CreatorAddress*
  commentId: Overload:AlgoStudio.Core.SmartContract.CreatorAddress
  name: CreatorAddress
  nameWithType: SmartContract.CreatorAddress
  fullName: AlgoStudio.Core.SmartContract.CreatorAddress
- uid: AlgoStudio.Core.ISmartContractPredefineds.CreatorAddress
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.CreatorAddress
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: CreatorAddress
  nameWithType: ISmartContractPredefineds.CreatorAddress
  fullName: AlgoStudio.Core.ISmartContractPredefineds.CreatorAddress
- uid: AlgoStudio.Core.SmartContract.CurrentApplicationAddress*
  commentId: Overload:AlgoStudio.Core.SmartContract.CurrentApplicationAddress
  name: CurrentApplicationAddress
  nameWithType: SmartContract.CurrentApplicationAddress
  fullName: AlgoStudio.Core.SmartContract.CurrentApplicationAddress
- uid: AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationAddress
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationAddress
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: CurrentApplicationAddress
  nameWithType: ISmartContractPredefineds.CurrentApplicationAddress
  fullName: AlgoStudio.Core.ISmartContractPredefineds.CurrentApplicationAddress
- uid: AlgoStudio.Core.SmartContract.GroupId*
  commentId: Overload:AlgoStudio.Core.SmartContract.GroupId
  name: GroupId
  nameWithType: SmartContract.GroupId
  fullName: AlgoStudio.Core.SmartContract.GroupId
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.GroupId
  commentId: P:AlgoStudio.Core.IAlgorandCommonPredefineds.GroupId
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  name: GroupId
  nameWithType: IAlgorandCommonPredefineds.GroupId
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.GroupId
- uid: AlgoStudio.Core.SmartContract.OpcodeBudget*
  commentId: Overload:AlgoStudio.Core.SmartContract.OpcodeBudget
  name: OpcodeBudget
  nameWithType: SmartContract.OpcodeBudget
  fullName: AlgoStudio.Core.SmartContract.OpcodeBudget
- uid: AlgoStudio.Core.SmartContract.CallerApplicationID*
  commentId: Overload:AlgoStudio.Core.SmartContract.CallerApplicationID
  name: CallerApplicationID
  nameWithType: SmartContract.CallerApplicationID
  fullName: AlgoStudio.Core.SmartContract.CallerApplicationID
- uid: AlgoStudio.Core.SmartContract.CallerApplicationAddress*
  commentId: Overload:AlgoStudio.Core.SmartContract.CallerApplicationAddress
  name: CallerApplicationAddress
  nameWithType: SmartContract.CallerApplicationAddress
  fullName: AlgoStudio.Core.SmartContract.CallerApplicationAddress
- uid: AlgoStudio.Core.SmartContract.AssetReferences*
  commentId: Overload:AlgoStudio.Core.SmartContract.AssetReferences
  name: AssetReferences
  nameWithType: SmartContract.AssetReferences
  fullName: AlgoStudio.Core.SmartContract.AssetReferences
- uid: AlgoStudio.Core.ISmartContractPredefineds.AssetReferences
  commentId: P:AlgoStudio.Core.ISmartContractPredefineds.AssetReferences
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: AssetReferences
  nameWithType: ISmartContractPredefineds.AssetReferences
  fullName: AlgoStudio.Core.ISmartContractPredefineds.AssetReferences
- uid: AlgoStudio.Core.AssetReference[]
  isExternal: true
  name: AssetReference[]
  nameWithType: AssetReference[]
  fullName: AlgoStudio.Core.AssetReference[]
  nameWithType.vb: AssetReference()
  fullName.vb: AlgoStudio.Core.AssetReference()
  name.vb: AssetReference()
  spec.csharp:
  - uid: AlgoStudio.Core.AssetReference
    name: AssetReference
    nameWithType: AssetReference
    fullName: AlgoStudio.Core.AssetReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AlgoStudio.Core.AssetReference
    name: AssetReference
    nameWithType: AssetReference
    fullName: AlgoStudio.Core.AssetReference
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1*
  commentId: Overload:AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1
  name: Ecdsa_pk_decompress_secp256k1
  nameWithType: SmartContract.Ecdsa_pk_decompress_secp256k1
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_pk_decompress_secp256k1
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Ecdsa_pk_decompress_secp256k1(Byte[], Byte[], Byte[])
  nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(Byte(), Byte(), Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte(), System.Byte(), System.Byte())
  name.vb: Ecdsa_pk_decompress_secp256k1(Byte(), Byte(), Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
    name: Ecdsa_pk_decompress_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1(System.Byte[],System.Byte[]@,System.Byte[]@)
    name: Ecdsa_pk_decompress_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_decompress_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1*
  commentId: Overload:AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1
  name: Ecdsa_pk_recover_secp256k1
  nameWithType: SmartContract.Ecdsa_pk_recover_secp256k1
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_pk_recover_secp256k1
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Ecdsa_pk_recover_secp256k1(Byte[], UInt64, Byte[], Byte[], Byte[], Byte[])
  nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(Byte[], UInt64, Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[], System.UInt64, System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(Byte(), UInt64, Byte(), Byte(), Byte(), Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte(), System.UInt64, System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: Ecdsa_pk_recover_secp256k1(Byte(), UInt64, Byte(), Byte(), Byte(), Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
    name: Ecdsa_pk_recover_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1(System.Byte[],System.UInt64,System.Byte[],System.Byte[],System.Byte[]@,System.Byte[]@)
    name: Ecdsa_pk_recover_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_pk_recover_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1*
  commentId: Overload:AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1
  name: Ecdsa_verify_secp256k1
  nameWithType: SmartContract.Ecdsa_verify_secp256k1
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256k1
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Ecdsa_verify_secp256k1(Byte[], Byte[], Byte[], Byte[], Byte[])
  nameWithType: IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(Byte[], Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(Byte(), Byte(), Byte(), Byte(), Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: Ecdsa_verify_secp256k1(Byte(), Byte(), Byte(), Byte(), Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: Ecdsa_verify_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: Ecdsa_verify_secp256k1
    nameWithType: IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ecdsa_verify_secp256k1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1*
  commentId: Overload:AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1
  name: Ecdsa_verify_secp256r1
  nameWithType: SmartContract.Ecdsa_verify_secp256r1
  fullName: AlgoStudio.Core.SmartContract.Ecdsa_verify_secp256r1
- uid: AlgoStudio.Core.SmartContract.Ed25519verify*
  commentId: Overload:AlgoStudio.Core.SmartContract.Ed25519verify
  name: Ed25519verify
  nameWithType: SmartContract.Ed25519verify
  fullName: AlgoStudio.Core.SmartContract.Ed25519verify
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Ed25519verify(Byte[], Byte[], Byte[])
  nameWithType: IAlgorandCommonPredefineds.Ed25519verify(Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Ed25519verify(Byte(), Byte(), Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte(), System.Byte(), System.Byte())
  name.vb: Ed25519verify(Byte(), Byte(), Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
    name: Ed25519verify
    nameWithType: IAlgorandCommonPredefineds.Ed25519verify
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify(System.Byte[],System.Byte[],System.Byte[])
    name: Ed25519verify
    nameWithType: IAlgorandCommonPredefineds.Ed25519verify
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Ed25519verify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.EncodeString*
  commentId: Overload:AlgoStudio.Core.SmartContract.EncodeString
  name: EncodeString
  nameWithType: SmartContract.EncodeString
  fullName: AlgoStudio.Core.SmartContract.EncodeString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AlgoStudio.Core.SmartContract.Keccak256*
  commentId: Overload:AlgoStudio.Core.SmartContract.Keccak256
  name: Keccak256
  nameWithType: SmartContract.Keccak256
  fullName: AlgoStudio.Core.SmartContract.Keccak256
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Keccak256(Byte[])
  nameWithType: IAlgorandCommonPredefineds.Keccak256(Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Keccak256(Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte())
  name.vb: Keccak256(Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
    name: Keccak256
    nameWithType: IAlgorandCommonPredefineds.Keccak256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256(System.Byte[])
    name: Keccak256
    nameWithType: IAlgorandCommonPredefineds.Keccak256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Keccak256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.Sha256*
  commentId: Overload:AlgoStudio.Core.SmartContract.Sha256
  name: Sha256
  nameWithType: SmartContract.Sha256
  fullName: AlgoStudio.Core.SmartContract.Sha256
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Sha256(Byte[])
  nameWithType: IAlgorandCommonPredefineds.Sha256(Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Sha256(Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte())
  name.vb: Sha256(Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
    name: Sha256
    nameWithType: IAlgorandCommonPredefineds.Sha256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256(System.Byte[])
    name: Sha256
    nameWithType: IAlgorandCommonPredefineds.Sha256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.Sha512_256*
  commentId: Overload:AlgoStudio.Core.SmartContract.Sha512_256
  name: Sha512_256
  nameWithType: SmartContract.Sha512_256
  fullName: AlgoStudio.Core.SmartContract.Sha512_256
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: Sha512_256(Byte[])
  nameWithType: IAlgorandCommonPredefineds.Sha512_256(Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.Sha512_256(Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte())
  name.vb: Sha512_256(Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
    name: Sha512_256
    nameWithType: IAlgorandCommonPredefineds.Sha512_256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256(System.Byte[])
    name: Sha512_256
    nameWithType: IAlgorandCommonPredefineds.Sha512_256
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.Sha512_256
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.SwitchLocalAccountContext*
  commentId: Overload:AlgoStudio.Core.SmartContract.SwitchLocalAccountContext
  name: SwitchLocalAccountContext
  nameWithType: SmartContract.SwitchLocalAccountContext
  fullName: AlgoStudio.Core.SmartContract.SwitchLocalAccountContext
- uid: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
  parent: AlgoStudio.Core.ISmartContractPredefineds
  isExternal: true
  name: SwitchLocalAccountContext(Int32)
  nameWithType: ISmartContractPredefineds.SwitchLocalAccountContext(Int32)
  fullName: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
    name: SwitchLocalAccountContext
    nameWithType: ISmartContractPredefineds.SwitchLocalAccountContext
    fullName: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext(System.Int32)
    name: SwitchLocalAccountContext
    nameWithType: ISmartContractPredefineds.SwitchLocalAccountContext
    fullName: AlgoStudio.Core.ISmartContractPredefineds.SwitchLocalAccountContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray*
  commentId: Overload:AlgoStudio.Core.SmartContract.BigIntegerFromByteArray
  name: BigIntegerFromByteArray
  nameWithType: SmartContract.BigIntegerFromByteArray
  fullName: AlgoStudio.Core.SmartContract.BigIntegerFromByteArray
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: BigIntegerFromByteArray(Byte[])
  nameWithType: IAlgorandCommonPredefineds.BigIntegerFromByteArray(Byte[])
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
  nameWithType.vb: IAlgorandCommonPredefineds.BigIntegerFromByteArray(Byte())
  fullName.vb: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte())
  name.vb: BigIntegerFromByteArray(Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
    name: BigIntegerFromByteArray
    nameWithType: IAlgorandCommonPredefineds.BigIntegerFromByteArray
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray(System.Byte[])
    name: BigIntegerFromByteArray
    nameWithType: IAlgorandCommonPredefineds.BigIntegerFromByteArray
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: AlgoStudio.Core.SmartContract.BigIntegerToByteArray*
  commentId: Overload:AlgoStudio.Core.SmartContract.BigIntegerToByteArray
  name: BigIntegerToByteArray
  nameWithType: SmartContract.BigIntegerToByteArray
  fullName: AlgoStudio.Core.SmartContract.BigIntegerToByteArray
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: BigIntegerToByteArray(BigInteger)
  nameWithType: IAlgorandCommonPredefineds.BigIntegerToByteArray(BigInteger)
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
    name: BigIntegerToByteArray
    nameWithType: IAlgorandCommonPredefineds.BigIntegerToByteArray
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray(System.Numerics.BigInteger)
    name: BigIntegerToByteArray
    nameWithType: IAlgorandCommonPredefineds.BigIntegerToByteArray
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Numerics.BigInteger
    name: BigInteger
    nameWithType: BigInteger
    fullName: System.Numerics.BigInteger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.BigIntegerFromIntegral*
  commentId: Overload:AlgoStudio.Core.SmartContract.BigIntegerFromIntegral
  name: BigIntegerFromIntegral
  nameWithType: SmartContract.BigIntegerFromIntegral
  fullName: AlgoStudio.Core.SmartContract.BigIntegerFromIntegral
- uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
  commentId: M:AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
  parent: AlgoStudio.Core.IAlgorandCommonPredefineds
  isExternal: true
  name: BigIntegerFromIntegral(Int64)
  nameWithType: IAlgorandCommonPredefineds.BigIntegerFromIntegral(Int64)
  fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
  spec.csharp:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
    name: BigIntegerFromIntegral
    nameWithType: IAlgorandCommonPredefineds.BigIntegerFromIntegral
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral(System.Int64)
    name: BigIntegerFromIntegral
    nameWithType: IAlgorandCommonPredefineds.BigIntegerFromIntegral
    fullName: AlgoStudio.Core.IAlgorandCommonPredefineds.BigIntegerFromIntegral
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: AlgoStudio.Core.SmartContract.TealBytesFromDecimal*
  commentId: Overload:AlgoStudio.Core.SmartContract.TealBytesFromDecimal
  name: TealBytesFromDecimal
  nameWithType: SmartContract.TealBytesFromDecimal
  fullName: AlgoStudio.Core.SmartContract.TealBytesFromDecimal
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: AlgoStudio.Core.SmartContract.DecimalFromTealBytes*
  commentId: Overload:AlgoStudio.Core.SmartContract.DecimalFromTealBytes
  name: DecimalFromTealBytes
  nameWithType: SmartContract.DecimalFromTealBytes
  fullName: AlgoStudio.Core.SmartContract.DecimalFromTealBytes
- uid: AlgoStudio.Core.SmartContract.Fail*
  commentId: Overload:AlgoStudio.Core.SmartContract.Fail
  name: Fail
  nameWithType: SmartContract.Fail
  fullName: AlgoStudio.Core.SmartContract.Fail
- uid: AlgoStudio.Core.SmartContract.CreateAsset*
  commentId: Overload:AlgoStudio.Core.SmartContract.CreateAsset
  name: CreateAsset
  nameWithType: SmartContract.CreateAsset
  fullName: AlgoStudio.Core.SmartContract.CreateAsset
- uid: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.ISmartContractPredefineds
  isExternal: true
  name: CreateAsset(UInt64, UInt32, Boolean, Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[])
  nameWithType: ISmartContractPredefineds.CreateAsset(UInt64, UInt32, Boolean, Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64, System.UInt32, System.Boolean, System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  nameWithType.vb: ISmartContractPredefineds.CreateAsset(UInt64, UInt32, Boolean, Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte())
  fullName.vb: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64, System.UInt32, System.Boolean, System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: CreateAsset(UInt64, UInt32, Boolean, Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte(), Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: CreateAsset
    nameWithType: ISmartContractPredefineds.CreateAsset
    fullName: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset(System.UInt64,System.UInt32,System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])
    name: CreateAsset
    nameWithType: ISmartContractPredefineds.CreateAsset
    fullName: AlgoStudio.Core.ISmartContractPredefineds.CreateAsset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: AlgoStudio.Core.SmartContract.InvokeSmartContractMethod*
  commentId: Overload:AlgoStudio.Core.SmartContract.InvokeSmartContractMethod
  name: InvokeSmartContractMethod
  nameWithType: SmartContract.InvokeSmartContractMethod
  fullName: AlgoStudio.Core.SmartContract.InvokeSmartContractMethod
- uid: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
  parent: AlgoStudio.Core.ISmartContractPredefineds
  name: InvokeSmartContractMethod()
  nameWithType: ISmartContractPredefineds.InvokeSmartContractMethod()
  fullName: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod()
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
    name: InvokeSmartContractMethod
    nameWithType: ISmartContractPredefineds.InvokeSmartContractMethod
    fullName: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
    name: InvokeSmartContractMethod
    nameWithType: ISmartContractPredefineds.InvokeSmartContractMethod
    fullName: AlgoStudio.Core.ISmartContractPredefineds.InvokeSmartContractMethod
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.LogBytes*
  commentId: Overload:AlgoStudio.Core.SmartContract.LogBytes
  name: LogBytes
  nameWithType: SmartContract.LogBytes
  fullName: AlgoStudio.Core.SmartContract.LogBytes
- uid: AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
  parent: AlgoStudio.Core.ISmartContractPredefineds
  isExternal: true
  name: LogBytes(Byte[])
  nameWithType: ISmartContractPredefineds.LogBytes(Byte[])
  fullName: AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
  nameWithType.vb: ISmartContractPredefineds.LogBytes(Byte())
  fullName.vb: AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte())
  name.vb: LogBytes(Byte())
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
    name: LogBytes
    nameWithType: ISmartContractPredefineds.LogBytes
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogBytes(System.Byte[])
    name: LogBytes
    nameWithType: ISmartContractPredefineds.LogBytes
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.LogInt*
  commentId: Overload:AlgoStudio.Core.SmartContract.LogInt
  name: LogInt
  nameWithType: SmartContract.LogInt
  fullName: AlgoStudio.Core.SmartContract.LogInt
- uid: AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
  parent: AlgoStudio.Core.ISmartContractPredefineds
  isExternal: true
  name: LogInt(Int64)
  nameWithType: ISmartContractPredefineds.LogInt(Int64)
  fullName: AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
    name: LogInt
    nameWithType: ISmartContractPredefineds.LogInt
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogInt(System.Int64)
    name: LogInt
    nameWithType: ISmartContractPredefineds.LogInt
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.LogUInt*
  commentId: Overload:AlgoStudio.Core.SmartContract.LogUInt
  name: LogUInt
  nameWithType: SmartContract.LogUInt
  fullName: AlgoStudio.Core.SmartContract.LogUInt
- uid: AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
  commentId: M:AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
  parent: AlgoStudio.Core.ISmartContractPredefineds
  isExternal: true
  name: LogUInt(UInt64)
  nameWithType: ISmartContractPredefineds.LogUInt(UInt64)
  fullName: AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
  spec.csharp:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
    name: LogUInt
    nameWithType: ISmartContractPredefineds.LogUInt
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogUInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AlgoStudio.Core.ISmartContractPredefineds.LogUInt(System.UInt64)
    name: LogUInt
    nameWithType: ISmartContractPredefineds.LogUInt
    fullName: AlgoStudio.Core.ISmartContractPredefineds.LogUInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AlgoStudio.Core.SmartContract.BoxSet*
  commentId: Overload:AlgoStudio.Core.SmartContract.BoxSet
  name: BoxSet
  nameWithType: SmartContract.BoxSet
  fullName: AlgoStudio.Core.SmartContract.BoxSet
- uid: AlgoStudio.Core.SmartContract.BoxDel*
  commentId: Overload:AlgoStudio.Core.SmartContract.BoxDel
  name: BoxDel
  nameWithType: SmartContract.BoxDel
  fullName: AlgoStudio.Core.SmartContract.BoxDel
- uid: AlgoStudio.Core.IntentionallyNotImplementedException
  commentId: T:AlgoStudio.Core.IntentionallyNotImplementedException
  name: IntentionallyNotImplementedException
  nameWithType: IntentionallyNotImplementedException
  fullName: AlgoStudio.Core.IntentionallyNotImplementedException
- uid: AlgoStudio.Core.SmartContract.BoxLen*
  commentId: Overload:AlgoStudio.Core.SmartContract.BoxLen
  name: BoxLen
  nameWithType: SmartContract.BoxLen
  fullName: AlgoStudio.Core.SmartContract.BoxLen
- uid: AlgoStudio.Core.SmartContract.BoxGet*
  commentId: Overload:AlgoStudio.Core.SmartContract.BoxGet
  name: BoxGet
  nameWithType: SmartContract.BoxGet
  fullName: AlgoStudio.Core.SmartContract.BoxGet
- uid: AlgoStudio.Core.SmartContract.BoxExists*
  commentId: Overload:AlgoStudio.Core.SmartContract.BoxExists
  name: BoxExists
  nameWithType: SmartContract.BoxExists
  fullName: AlgoStudio.Core.SmartContract.BoxExists
- uid: AlgoStudio.Core.SmartContract.Error*
  commentId: Overload:AlgoStudio.Core.SmartContract.Error
  name: Error
  nameWithType: SmartContract.Error
  fullName: AlgoStudio.Core.SmartContract.Error
- uid: AlgoStudio.Core.SmartContract.ApprovalProgram*
  commentId: Overload:AlgoStudio.Core.SmartContract.ApprovalProgram
  name: ApprovalProgram
  nameWithType: SmartContract.ApprovalProgram
  fullName: AlgoStudio.Core.SmartContract.ApprovalProgram
- uid: AlgoStudio.Core.AppCallTransactionReference
  commentId: T:AlgoStudio.Core.AppCallTransactionReference
  parent: AlgoStudio.Core
  name: AppCallTransactionReference
  nameWithType: AppCallTransactionReference
  fullName: AlgoStudio.Core.AppCallTransactionReference
- uid: AlgoStudio.Core.SmartContract.ClearStateProgram*
  commentId: Overload:AlgoStudio.Core.SmartContract.ClearStateProgram
  name: ClearStateProgram
  nameWithType: SmartContract.ClearStateProgram
  fullName: AlgoStudio.Core.SmartContract.ClearStateProgram
