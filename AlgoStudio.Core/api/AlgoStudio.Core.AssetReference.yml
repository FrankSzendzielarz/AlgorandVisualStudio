### YamlMime:ManagedReference
items:
- uid: AlgoStudio.Core.AssetReference
  commentId: T:AlgoStudio.Core.AssetReference
  id: AssetReference
  parent: AlgoStudio.Core
  children:
  - AlgoStudio.Core.AssetReference.Clawback
  - AlgoStudio.Core.AssetReference.Creator
  - AlgoStudio.Core.AssetReference.Decimals
  - AlgoStudio.Core.AssetReference.DefaultFrozen
  - AlgoStudio.Core.AssetReference.Freeze
  - AlgoStudio.Core.AssetReference.Id
  - AlgoStudio.Core.AssetReference.Manager
  - AlgoStudio.Core.AssetReference.MetadataHash
  - AlgoStudio.Core.AssetReference.Name
  - AlgoStudio.Core.AssetReference.Reserve
  - AlgoStudio.Core.AssetReference.Total
  - AlgoStudio.Core.AssetReference.Transfer(AlgoStudio.Core.AccountReference,System.UInt64)
  - AlgoStudio.Core.AssetReference.UnitName
  - AlgoStudio.Core.AssetReference.Update(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  - AlgoStudio.Core.AssetReference.URL
  langs:
  - csharp
  - vb
  name: AssetReference
  nameWithType: AssetReference
  fullName: AlgoStudio.Core.AssetReference
  type: Class
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: AssetReference
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 7
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public sealed class AssetReference
    content.vb: Public NotInheritable Class AssetReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: AlgoStudio.Core.AssetReference.Id
  commentId: F:AlgoStudio.Core.AssetReference.Id
  id: Id
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AssetReference.Id
  fullName: AlgoStudio.Core.AssetReference.Id
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Id
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 11
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public ulong Id
    return:
      type: System.UInt64
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Id As ULong
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Total
  commentId: F:AlgoStudio.Core.AssetReference.Total
  id: Total
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: AssetReference.Total
  fullName: AlgoStudio.Core.AssetReference.Total
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Total
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 13
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public ulong Total
    return:
      type: System.UInt64
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Total As ULong
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Decimals
  commentId: F:AlgoStudio.Core.AssetReference.Decimals
  id: Decimals
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Decimals
  nameWithType: AssetReference.Decimals
  fullName: AlgoStudio.Core.AssetReference.Decimals
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Decimals
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 15
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public ulong Decimals
    return:
      type: System.UInt64
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Decimals As ULong
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.DefaultFrozen
  commentId: F:AlgoStudio.Core.AssetReference.DefaultFrozen
  id: DefaultFrozen
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: DefaultFrozen
  nameWithType: AssetReference.DefaultFrozen
  fullName: AlgoStudio.Core.AssetReference.DefaultFrozen
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: DefaultFrozen
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 17
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public ulong DefaultFrozen
    return:
      type: System.UInt64
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public DefaultFrozen As ULong
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.UnitName
  commentId: F:AlgoStudio.Core.AssetReference.UnitName
  id: UnitName
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: UnitName
  nameWithType: AssetReference.UnitName
  fullName: AlgoStudio.Core.AssetReference.UnitName
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: UnitName
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 19
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] UnitName
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public UnitName As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Name
  commentId: F:AlgoStudio.Core.AssetReference.Name
  id: Name
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AssetReference.Name
  fullName: AlgoStudio.Core.AssetReference.Name
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Name
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 21
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Name
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Name As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.URL
  commentId: F:AlgoStudio.Core.AssetReference.URL
  id: URL
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: URL
  nameWithType: AssetReference.URL
  fullName: AlgoStudio.Core.AssetReference.URL
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: URL
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 23
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] URL
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public URL As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.MetadataHash
  commentId: F:AlgoStudio.Core.AssetReference.MetadataHash
  id: MetadataHash
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: MetadataHash
  nameWithType: AssetReference.MetadataHash
  fullName: AlgoStudio.Core.AssetReference.MetadataHash
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: MetadataHash
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 25
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] MetadataHash
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public MetadataHash As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Manager
  commentId: F:AlgoStudio.Core.AssetReference.Manager
  id: Manager
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: AssetReference.Manager
  fullName: AlgoStudio.Core.AssetReference.Manager
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Manager
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 27
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Manager
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Manager As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Reserve
  commentId: F:AlgoStudio.Core.AssetReference.Reserve
  id: Reserve
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Reserve
  nameWithType: AssetReference.Reserve
  fullName: AlgoStudio.Core.AssetReference.Reserve
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Reserve
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 29
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Reserve
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Reserve As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Freeze
  commentId: F:AlgoStudio.Core.AssetReference.Freeze
  id: Freeze
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Freeze
  nameWithType: AssetReference.Freeze
  fullName: AlgoStudio.Core.AssetReference.Freeze
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Freeze
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 31
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Freeze
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Freeze As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Clawback
  commentId: F:AlgoStudio.Core.AssetReference.Clawback
  id: Clawback
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Clawback
  nameWithType: AssetReference.Clawback
  fullName: AlgoStudio.Core.AssetReference.Clawback
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Clawback
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 33
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Clawback
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Clawback As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Creator
  commentId: F:AlgoStudio.Core.AssetReference.Creator
  id: Creator
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: AssetReference.Creator
  fullName: AlgoStudio.Core.AssetReference.Creator
  type: Field
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Creator
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 35
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: >-
      [Storage(StorageType.Protocol)]

      public byte[] Creator
    return:
      type: System.Byte[]
    content.vb: >-
      <Storage(StorageType.Protocol)>

      Public Creator As Byte()
  attributes:
  - type: AlgoStudio.Core.Attributes.StorageAttribute
    ctor: AlgoStudio.Core.Attributes.StorageAttribute.#ctor(AlgoStudio.Core.StorageType)
    arguments:
    - type: AlgoStudio.Core.StorageType
      value: 3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Transfer(AlgoStudio.Core.AccountReference,System.UInt64)
  commentId: M:AlgoStudio.Core.AssetReference.Transfer(AlgoStudio.Core.AccountReference,System.UInt64)
  id: Transfer(AlgoStudio.Core.AccountReference,System.UInt64)
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Transfer(AccountReference, UInt64)
  nameWithType: AssetReference.Transfer(AccountReference, UInt64)
  fullName: AlgoStudio.Core.AssetReference.Transfer(AlgoStudio.Core.AccountReference, System.UInt64)
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Transfer
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 38
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void Transfer(AccountReference recipientAddress, ulong amount)
    parameters:
    - id: recipientAddress
      type: AlgoStudio.Core.AccountReference
    - id: amount
      type: System.UInt64
    content.vb: Public Sub Transfer(recipientAddress As AccountReference, amount As ULong)
  overload: AlgoStudio.Core.AssetReference.Transfer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AlgoStudio.Core.AssetReference.Update(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  commentId: M:AlgoStudio.Core.AssetReference.Update(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  id: Update(System.Byte[],System.Byte[],System.Byte[],System.Byte[])
  parent: AlgoStudio.Core.AssetReference
  langs:
  - csharp
  - vb
  name: Update(Byte[], Byte[], Byte[], Byte[])
  nameWithType: AssetReference.Update(Byte[], Byte[], Byte[], Byte[])
  fullName: AlgoStudio.Core.AssetReference.Update(System.Byte[], System.Byte[], System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: AlgoStudio.Core/AssetReference.cs
      branch: MigrateTests
      repo: https://frankstech@dev.azure.com/frankstech/Algorand%20for%20Visual%20Studio/_git/Algorand%20for%20Visual%20Studio
    id: Update
    path: ../../AlgoStudio/AlgoStudio.Core/AssetReference.cs
    startLine: 40
  assemblies:
  - AlgoStudio - Backup.Core
  namespace: AlgoStudio.Core
  syntax:
    content: public void Update(byte[] Manager = null, byte[] Reserve = null, byte[] Freeze = null, byte[] Clawback = null)
    parameters:
    - id: Manager
      type: System.Byte[]
    - id: Reserve
      type: System.Byte[]
    - id: Freeze
      type: System.Byte[]
    - id: Clawback
      type: System.Byte[]
    content.vb: Public Sub Update(Manager As Byte() = Nothing, Reserve As Byte() = Nothing, Freeze As Byte() = Nothing, Clawback As Byte() = Nothing)
  overload: AlgoStudio.Core.AssetReference.Update*
  nameWithType.vb: AssetReference.Update(Byte(), Byte(), Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AlgoStudio.Core.AssetReference.Update(System.Byte(), System.Byte(), System.Byte(), System.Byte())
  name.vb: Update(Byte(), Byte(), Byte(), Byte())
references:
- uid: AlgoStudio.Core
  commentId: N:AlgoStudio.Core
  name: AlgoStudio.Core
  nameWithType: AlgoStudio.Core
  fullName: AlgoStudio.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AlgoStudio.Core.AssetReference.Transfer*
  commentId: Overload:AlgoStudio.Core.AssetReference.Transfer
  name: Transfer
  nameWithType: AssetReference.Transfer
  fullName: AlgoStudio.Core.AssetReference.Transfer
- uid: AlgoStudio.Core.AccountReference
  commentId: T:AlgoStudio.Core.AccountReference
  parent: AlgoStudio.Core
  name: AccountReference
  nameWithType: AccountReference
  fullName: AlgoStudio.Core.AccountReference
- uid: AlgoStudio.Core.AssetReference.Update*
  commentId: Overload:AlgoStudio.Core.AssetReference.Update
  name: Update
  nameWithType: AssetReference.Update
  fullName: AlgoStudio.Core.AssetReference.Update
